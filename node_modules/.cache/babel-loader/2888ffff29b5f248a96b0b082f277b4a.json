{"ast":null,"code":"'use strict';\n\nconst PassThrough = require('stream').PassThrough;\n\nmodule.exports = opts => {\n  opts = Object.assign({}, opts);\n  const array = opts.array;\n  let encoding = opts.encoding;\n  const buffer = encoding === 'buffer';\n  let objectMode = false;\n\n  if (array) {\n    objectMode = !(encoding || buffer);\n  } else {\n    encoding = encoding || 'utf8';\n  }\n\n  if (buffer) {\n    encoding = null;\n  }\n\n  let len = 0;\n  const ret = [];\n  const stream = new PassThrough({\n    objectMode\n  });\n\n  if (encoding) {\n    stream.setEncoding(encoding);\n  }\n\n  stream.on('data', chunk => {\n    ret.push(chunk);\n\n    if (objectMode) {\n      len = ret.length;\n    } else {\n      len += chunk.length;\n    }\n  });\n\n  stream.getBufferedValue = () => {\n    if (array) {\n      return ret;\n    }\n\n    return buffer ? Buffer.concat(ret, len) : ret.join('');\n  };\n\n  stream.getBufferedLength = () => len;\n\n  return stream;\n};","map":null,"metadata":{},"sourceType":"script"}